name: Build with Conan and Caching

on:
  push:
    branches: [use-conan-build-system]
  pull_request:
    branches: [main]

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Conan
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Conan
        run: |
          sudo apt-get update
          sudo apt-get install -y libva-dev libvdpau-dev xkb-data
          sudo pip install conan
          sudo chmod 777 -R /root

      - name: Restore Conan Cache
        uses: actions/cache/restore@v4
        with:
          path: /root/.conan2
          key: conan-cache-${{ runner.os }}-aeeb58cbdbc758396c21f25d1fc0c8c1e735bedfc8d1c3fa033a301e70b42318
          restore-keys: |
            conan-cache-${{ runner.os }}-aeeb58cbdbc758396c21f25d1fc0c8c1e735bedfc8d1c3fa033a301e70b42318

      - name: Build with Conan
        run: |
          if [[ -f "/root/.conan2/profiles/default" ]]; then
            echo "Loaded from cache"
          else
            sudo conan profile detect
          fi
          sudo cat /root/.conan2/profiles/default
          sudo conan install . --profile conan/profile_linux --output-folder=build --build=missing
          sudo chmod 777 -R /root/.conan2

      - name: Save Conan Cache
        uses: actions/cache/save@v4
        with:
          path: /root/.conan2
          key: conan-cache-${{ runner.os }}-aeeb58cbdbc758396c21f25d1fc0c8c1e735bedfc8d1c3fa033a301e70b42318

      - name: Build imagec
        env:
          TAG_NAME: "${{ github.ref_name }}"
        run: |
          cd build
          sudo cmake .. -G "Unix Makefiles" -DTAG_NAME="$TAG_NAME" -DCMAKE_BUILD_TYPE="Release" -DCMAKE_POLICY_DEFAULT_CMP0091=NEW -DCMAKE_TOOLCHAIN_FILE="build/Release/generators/conan_toolchain.cmake"
          sudo cmake --build . --config Release --target imagec --parallel 8
          
      - name: Prepare output
        run: |
          sudo chmod -R 777 build/build
          cd build/build
          mkdir -p output
          cd output
          mkdir -p ./plugins
          mkdir -p ./models
          mkdir -p ./lib
          mkdir -p ./java
          cp ../imagec imagec
          cp -r /root/.conan2/p/b/*/p/./plugins/* ./plugins
          cp -r ${GITHUB_WORKSPACE}/resources/templates ./templates
          cp ${GITHUB_WORKSPACE}/resources/launcher/imagec.sh imagec.sh
          cd lib
          cp /root/.conan2/p/b/*/p/lib/libQt6Core.so.6 .
          cp /root/.conan2/p/b/*/p/lib/libQt6Gui.so.6 .
          cp /root/.conan2/p/b/*/p/lib/libQt6Widgets.so.6 .
          cp /root/.conan2/p/b/*/p/lib/libQt6XcbQpa.so.6 .
          cp /root/.conan2/p/b/*/p/lib/libQt6Svg.so.6 .
          cp /usr/lib/x86_64-linux-gnu/libxcb-cursor.so.0 .
          cd ..
          chmod +x imagec
          chmod +x imagec.sh
          cd java
          cp ${GITHUB_WORKSPACE}/resources/java/bioformats.jar .
          cp ${GITHUB_WORKSPACE}/resources/java/BioFormatsWrapper.class .
          cp -r ${GITHUB_WORKSPACE}/resources/java/jre_linux.zip .
          unzip jre_linux.zip
          rm -rf jre_linux.zip
          cd ..


      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: imagec-x64-linux
          include-hidden-files: true
          if-no-files-found: error
          path: build/build/output


  build-macos:
    runs-on: macos-14

    steps:
      - uses: actions/checkout@v4

      - name: Set up Conan
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Conan
        run: |
          pip install conan

      - name: Restore Conan Cache
        uses: actions/cache/restore@v4
        with:
          path: /Users/runner/.conan2
          key: conan-cache-${{ runner.os }}-aeeb58cbdbc758396c21f25d1fc0c8c1e735bedfc8d1c3fa033a301e70b42318
          restore-keys: |
            conan-cache-${{ runner.os }}-aeeb58cbdbc758396c21f25d1fc0c8c1e735bedfc8d1c3fa033a301e70b42318

      - name: Build with Conan
        run: |
          if [[ -f "/Users/runner/.conan2/profiles/default" ]]; then
            echo "Loaded from cache"
          else
            conan profile detect
          fi
          cat /Users/runner/.conan2/profiles/default
          conan install . --profile conan/profile_macos --output-folder=build --build=missing

      - name: Save Conan Cache
        uses: actions/cache/save@v4
        with:
          path: /Users/runner/.conan2
          key: conan-cache-${{ runner.os }}-aeeb58cbdbc758396c21f25d1fc0c8c1e735bedfc8d1c3fa033a301e70b42318

      - name: Build imagec
        env:
          TAG_NAME: "${{ github.ref_name }}"
        run: |
          cd build
          cmake .. -G "Unix Makefiles" -DTAG_NAME="$TAG_NAME" -DCMAKE_BUILD_TYPE="Release" -DCMAKE_POLICY_DEFAULT_CMP0091=NEW -DCMAKE_TOOLCHAIN_FILE="build/Release/generators/conan_toolchain.cmake"
          cmake --build . --config Release --target imagec --parallel 8

      - name: Prepare output
        run: |
          cd build/build
          mkdir -p output
          cd output
          mkdir -p ./plugins
          mkdir -p ./models
          mkdir -p ./lib
          mkdir -p ./java
          cp -r ../imagec.app imagec.app
          cp -r /Users/runner/.conan2/p/b/*/p/./plugins/* ./plugins
          cp -r ${GITHUB_WORKSPACE}/resources/templates ./templates
          cd lib
          cp /Users/runner/.conan2/p/b/*/p/lib/libQt6Core.6.dylib .
          cp /Users/runner/.conan2/p/b/*/p/lib/libQt6Gui.6.dylib .
          cp /Users/runner/.conan2/p/b/*/p/lib/libQt6Widgets.6.dylib .
          cp /Users/runner/.conan2/p/b/*/p/lib/libQt6Svg.6.dylib .
          cd ..
          cd java
          cp ${GITHUB_WORKSPACE}/resources/java/bioformats.jar .
          cp ${GITHUB_WORKSPACE}/resources/java/BioFormatsWrapper.class .
          cp -r ${GITHUB_WORKSPACE}/resources/java/jre_macos_arm.zip .
          unzip jre_macos_arm.zip
          rm -rf jre_macos_arm.zip
          cd ..

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: imagec-arm64-macos
          include-hidden-files: true
          if-no-files-found: error
          path: build/build/output


  build-windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Conan
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Conan
        run: |
          pip install conan

      - name: Restore Conan Cache
        uses: actions/cache/restore@v4
        with:
          path: C:/Users/runneradmin/.conan2
          key: conan-cache-${{ runner.os }}-e836fa557b07517f8df145f13dcfa974b3484eb4fedb79fdcfb009cc1ad3b36c
          restore-keys: |
            conan-cache-${{ runner.os }}-e836fa557b07517f8df145f13dcfa974b3484eb4fedb79fdcfb009cc1ad3b36c

      - name: Build with Conan
        run: |
          if (Test-Path "C:\Users\runneradmin\.conan2\profiles\default") {
            Write-Host "Loaded from cache!"
          } else {
            conan profile detect
          }
          cat C:\Users\runneradmin\.conan2\profiles\default
          conan install . --profile conan/profile_win_mingw --output-folder=build --build=missing

      - name: Save Conan Cache
        uses: actions/cache/save@v4
        with:
          path: C:/Users/runneradmin/.conan2
          key: conan-cache-${{ runner.os }}-e836fa557b07517f8df145f13dcfa974b3484eb4fedb79fdcfb009cc1ad3b36c

      - name: Build imagec
        env:
          PRIV_KEY: ${{ secrets.PRIV_KEY }}
          PUB_KEY: ${{ secrets.PUB_KEY }}
          TAG_NAME: "${{ github.ref_name }}"
        run: |
          $conanDuckDBbasePath = 'C:\Users\runneradmin\.conan2\p\b\duckd92ca9c549dcec\p'

          Copy-Item -Path "$env:GITHUB_WORKSPACE\lib\libduckdb-windows-amd64\duckdb.hpp" -Destination "$conanDuckDBbasePath\include" -Force
          Copy-Item -Path "$env:GITHUB_WORKSPACE\lib\libduckdb-windows-amd64\duckdb.h" -Destination "$conanDuckDBbasePath\include" -Force
          Copy-Item -Recurse -Path "$env:GITHUB_WORKSPACE\lib\libduckdb-windows-amd64\duckdb" -Destination "$conanDuckDBbasePath\include" -Force

          cd D:\a\imagec\imagec\build
          cmake .. -G "MinGW Makefiles" -DTAG_NAME="$TAG_NAME" -DCMAKE_SH=CMAKE_SH-NOTFOUND -DCMAKE_POLICY_DEFAULT_CMP0091=NEW -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE="build/Release/generators/conan_toolchain.cmake"
          cmake --build . --config Release --target imagec --parallel 8

      - name: Prepare output
        run: |
          cd build/build
          ni "output" -ItemType Directory
          cd output
          ni "plugins" -ItemType Directory
          ni "models" -ItemType Directory
          ni "java" -ItemType Directory
          Copy-Item -Path "../imagec.exe" -Destination "imagec.exe"
          Copy-Item -Recurse -Path "C:/Users/runneradmin/.conan2/p/b/qtbaa6f4860780e/p/./plugins/*" -Destination "./plugins"
          Copy-Item -Path "C:/Users/runneradmin/.conan2/p/b/qtbaa6f4860780e/p/bin/Qt6Core.dll" -Destination "."
          Copy-Item -Path "C:/Users/runneradmin/.conan2/p/b/qtbaa6f4860780e/p/bin/Qt6Gui.dll" -Destination "."
          Copy-Item -Path "C:/Users/runneradmin/.conan2/p/b/qtbaa6f4860780e/p/bin/Qt6Widgets.dll" -Destination "."
          Copy-Item -Path "C:/Users/runneradmin/.conan2/p/b/qtbaa6f4860780e/p/bin/Qt6Svg.dll" -Destination "."
          Copy-Item -Recurse -Path "$env:GITHUB_WORKSPACE/resources/templates" ./templates
          cd java
          Copy-Item -Recurse -Path "$env:GITHUB_WORKSPACE/resources/java/bioformats.jar" -Destination "."
          Copy-Item -Recurse -Path "$env:GITHUB_WORKSPACE/resources/java/BioFormatsWrapper.class" -Destination "."
          Copy-Item -Recurse -Path "$env:GITHUB_WORKSPACE/resources/java/jre_win.zip" -Destination "."
          Expand-Archive "jre_win.zip" -DestinationPath "jre_win"
          Remove-Item jre_win.zip
          cd ..

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: imagec-x64-win
          include-hidden-files: true
          if-no-files-found: error
          path: build/build/output
