name: C++ Build

on:
  push:
    branches:
      - main
      - reporting-pipelines
    tags:
      - '*'
  pull_request:
    branches:
      - main

jobs:

  build-windows:
    runs-on: windows-2022

    steps:

      - uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >-
            git
            curl
            base-devel
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-catch
            mingw-w64-x86_64-pugixml
            mingw-w64-x86_64-protobuf
            mingw-w64-x86_64-opencv
            mingw-w64-x86_64-nlohmann-json
            mingw-w64-x86_64-libtiff
            mingw-w64-x86_64-python-mingw-ldd
            mingw-w64-x86_64-qt6-base
            mingw-w64-x86_64-libxlsxwriter
            mingw-w64-x86_64-libarchive
            mingw-w64-x86_64-xz
      - name: Put MSYS2_MinGW64 on PATH
        run: |
          echo "D:/a/_temp/msys64/mingw64/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          echo "D:/a/_temp/msys64/usr/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build imageC for Windows
        env:
          PRIV_KEY: ${{ secrets.PRIV_KEY }}
          PUB_KEY: ${{ secrets.PUB_KEY }}
          TAG_NAME: "${{ github.ref_name }}"
        run: |
          echo "Workspace: $env:GITHUB_WORKSPACE"
          ./build.ps1
      
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: imagec-x64-win
          path: build/build
          if-no-files-found: error


  build-linux:
    runs-on: ubuntu-22.04
    container: 
      image: joda001/imagec:v1.7.3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build imageC for Linux
        env:
          TAG_NAME: "${{ github.ref_name }}"
        run: |
          ./clean.sh
          ./build.sh
          strip build/build/imagec

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: imagec-x64-linux
          path: build/build
          if-no-files-found: error

      
  release:
    needs:
      - build-windows
      - build-linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: actions/download-artifact@v3
        with:
          name: imagec-x64-linux
          path: build/build

      - uses: actions/download-artifact@v3
        with:
          name: imagec-x64-win
          path: build/build

      - name: Rename files through architecture
        run: |
          mv build/build/win-dlls.zip build/win-dlls.zip

          mkdir imagec-x64-linux-bundle
          mkdir -p imagec-x64-linux-bundle/java
          cp -r build/build/* imagec-x64-linux-bundle/
          cp java/bioformats.jar imagec-x64-linux-bundle/java/bioformats.jar
          cp java/BioFormatsWrapper.class imagec-x64-linux-bundle/java/BioFormatsWrapper.class
          unzip java/jre_linux.zip -d jre_linux_unzip
          mv jre_linux_unzip/jre_linux imagec-x64-linux-bundle/java/jre_linux
          zip -r imagec-x64-linux-bundle.zip imagec-x64-linux-bundle
          

          mkdir imagec-x64-win-bundle
          mkdir -p imagec-x64-win-bundle/java
          mkdir -p imagec-x64-win-bundle/models
          cp build/build/imagec.exe imagec-x64-win-bundle/imagec.exe
          cp java/bioformats.jar imagec-x64-win-bundle/java/bioformats.jar
          cp java/BioFormatsWrapper.class imagec-x64-win-bundle/java/BioFormatsWrapper.class
          unzip java/jre_win.zip -d jre_win_unzip
          mv jre_win_unzip/jre_win imagec-x64-win-bundle/java/jre_win
          unzip build/win-dlls.zip -d win_dll_unzip
          mv win_dll_unzip/dlls/* imagec-x64-win-bundle/
          zip -r imagec-x64-win-bundle.zip imagec-x64-win-bundle

          mv build/build/imagec build/build/imagec-x64-linux
          mv build/build/imagec.exe build/build/imagec-x64-win.exe
          mv java/jre_linux.zip java/jre-linux.zip
          mv java/jre_win.zip java/jre-win.zip
          zip java/bioformats-jni-wrapper.zip java/bioformats.jar java/BioFormatsWrapper.class

          
          timestamp=$(date +"%Y-%m-%d %H:%M:%S")
          hash_value_linux=$(sha256sum imagec-x64-linux-bundle/imagec | cut -d ' ' -f 1)
          hash_value_win=$(sha256sum imagec-x64-win-bundle/imagec.exe | cut -d ' ' -f 1)
          version="${GITHUB_REF#refs/tags/}"
          
          json_string_linux=$(cat <<-EOF
          {
            "version": "$version",
            "sha256": "$hash_value_linux",
            "timestamp": "$timestamp"
          }
          EOF
          )
          
          json_string_win=$(cat <<-EOF
          {
            "version": "$version",
            "sha256": "$hash_value_win",
            "timestamp": "$timestamp"
          }
          EOF
          )

          echo "$json_string_linux"
          echo "$json_string_win"

          echo "$json_string_linux" > imagec-x64-linux-bundle.json
          echo "$json_string_win" > imagec-x64-win-bundle.json

      - name: Upload Additional Files
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            build/build/imagec-x64-linux
            build/build/imagec-x64-win.exe
            build/build/win-dlls.zip
            java/jre-linux.zip
            java/jre-win.zip
            java/bioformats-jni-wrapper.zip
            imagec-x64-linux-bundle.zip
            imagec-x64-win-bundle.zip
      
      - name: Upload to imagec.org
        if: startsWith(github.ref, 'refs/tags/')
        env:
          SSH_KEY: ${{ secrets.SSH_KEY_IMAGEC }}
          SERVER_NAME : ${{ secrets.SERVER_NAME_IMAGEC }}
        run: |
          echo "$SSH_KEY" > ssh_key_for_github
          chmod 400 ssh_key_for_github
          scp -o StrictHostKeyChecking=no -i ssh_key_for_github imagec-x64-linux-bundle.zip github@$SERVER_NAME:/var/www/html/downloads/imagec-x64-linux-bundle.zip
          scp -o StrictHostKeyChecking=no -i ssh_key_for_github imagec-x64-linux-bundle.json github@$SERVER_NAME:/var/www/html/downloads/imagec-x64-linux-bundle.json
          scp -o StrictHostKeyChecking=no -i ssh_key_for_github imagec-x64-win-bundle.zip github@$SERVER_NAME:/var/www/html/downloads/imagec-x64-win-bundle.zip
          scp -o StrictHostKeyChecking=no -i ssh_key_for_github imagec-x64-win-bundle.json github@$SERVER_NAME:/var/www/html/downloads/imagec-x64-win-bundle.json
          rm -rf ssh_key_for_github


      
      
      
      
      
      
      
         