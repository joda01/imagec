<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!--
wxFormBuilder - A Visual Dialog Editor for wxWidgets.
Copyright (C) 2005 José Antonio Hurtado

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

Written by
  José Antonio Hurtado - joseantonio.hurtado@gmail.com
  Juan Antonio Ortega  - jortegalalmolda@gmail.com

Lua code generation written by
  Vratislav Zival
-->
<codegen language="Lua">

	<templates class="wxHtmlWindow">
		<template name="construction">#utbl$name = #class( #utbl#wxparent $name, $id, $pos, $size, $style #ifnotnull $window_style @{ +$window_style @} #ifnotnull $window_name @{, $window_name @} )</template>
		<template name="include"/><!--import wx.html</template>-->
		<template name="evt_connect_OnHtmlCellClicked">-- event #utbl$name:OnHtmlCellClicked isn't currently supported by wxLua</template>
		<template name="evt_connect_OnHtmlCellHover">-- event #utbl$name:OnHtmlCellHover isn't currently supported by wxLua</template>
		<template name="evt_connect_OnHtmlLinkClicked">-- event #utbl$name:OnHtmlLinkClicked isn't currently supported by wxLua</template>
	</templates>

	<templates class="wxRichTextCtrl">
		<template name="construction">-- unsupported control #nl --#utbl$name = #class( #utbl#wxparent $name, $id, wx.EmptyString, $pos, $size, $style #ifnotnull $window_style @{ +$window_style @} #ifnotnull $window_name @{, wx.DefaultValidator, $window_name @} )</template>
		<template name="include"/><!--import wx.richtext</template>-->
		<template name="evt_connect_OnText">-- event #utbl$name:OnText isn't currently supported by wxLua</template>
		<template name="evt_connect_OnTextEnter">-- event #utbl$name:OnTextEnter isn't currently supported by wxLua</template>
		<template name="evt_connect_OnTextURL">-- event #utbl$name:OnTextURL isn't currently supported by wxLua</template>
		<template name="evt_connect_OnTextMaxLen">-- event #utbl$name:OnTextMaxLen isn't currently supported by wxLua</template>ate>
		<template name="evt_connect_OnRichTextCharacter">-- event #utbl$name:OnRichTextCharacter isn't currently supported by wxLua</template>
		<template name="evt_connect_OnRichTextDelete">-- event #utbl$name:OnRichTextDelete isn't currently supported by wxLua</template>
		<template name="evt_connect_OnRichTextReturn">-- event #utbl$name:OnRichTextReturn isn't currently supported by wxLua</template>
		<template name="evt_connect_OnRichTextStyleChanged">-- event #utbl$name:OnRichTextStyleChanged isn't currently supported by wxLua</template>
		<template name="evt_connect_OnRichTextStyleSheetChanged">-- event #utbl$name:OnRichTextStyleSheetChanged isn't currently supported by wxLua</template>
		<template name="evt_connect_OnRichTextStyleSheetReplacing">-- event #utbl$name:OnRichTextStyleSheetReplacing isn't currently supported by wxLua</template>
		<template name="evt_connect_OnRichTextStyleSheetReplaced">-- event #utbl$name:OnRichTextStyleSheetReplaced isn't currently supported by wxLua</template>
		<template name="evt_connect_OnRichTextContentInserted">-- event #utbl$name:OnRichTextContentInserted isn't currently supported by wxLua</template>
		<template name="evt_connect_OnRichTextContentDeleted">-- event #utbl$name:OnRichTextContentDeleted isn't currently supported by wxLua</template>
	</templates>

	<templates class="wxToggleButton">
		<template name="construction">#utbl$name = #class( #utbl#wxparent $name, $id, $label, $pos, $size, $window_style #ifnotnull $window_name @{, wx.DefaultValidator, $window_name @} )</template>
		<template name="settings">#ifnotequal $value "0" @{ #utbl$name:SetValue( True ) @}</template>
		<template name="evt_connect_OnToggleButton">#utbl$name:Connect( wx.wxEVT_COMMAND_TOGGLEBUTTON_CLICKED, function(event)#nl --implements  #handler#nl #skip #nl end )</template>
	</templates>

	<templates class="wxBitmapToggleButton">
		<template name="construction">#utbl$name = #class( #utbl#wxparent $name, $id, $bitmap, $pos, $size, $window_style #ifnotnull $window_name @{, wx.DefaultValidator, $window_name @} )</template>
	</templates>

	<templates class="wxColourPickerCtrl">
		<template name="construction">
			#utbl$name = #class( #utbl#wxparent $name, $id,
			#ifnull $colour
			@{ wx.wxBLACK, @}
			#ifnotnull $colour
			@{ $colour, @}
			$pos, $size, $style #ifnotnull $window_style @{ +$window_style @} #ifnotnull $window_name @{, wx.DefaultValidator, $window_name @} )
		</template>
		<template name="evt_connect_OnColourChanged">#utbl$name:Connect( wx.wxEVT_COMMAND_COLOURPICKER_CHANGED, function(event)#nl --implements  #handler#nl #skip #nl end )</template>
	</templates>

	<templates class="wxFontPickerCtrl">
		<template name="construction">
			#utbl$name = #class( #utbl#wxparent $name, $id,
			#ifnull $value
			@{ wx.wxNullFont, @}
			#ifnotnull $value
			@{ $value, @}
			$pos, $size, $style #ifnotnull $window_style @{ +$window_style @} #ifnotnull $window_name @{, wx.DefaultValidator, $window_name @} )
		</template>
		<template name="settings">
			#ifnotnull $max_point_size
			@{ #utbl$name:SetMaxPointSize( $max_point_size ) @}
		</template>
		<template name="evt_connect_OnFontChanged">#utbl$name:Connect( wx.wxEVT_COMMAND_FONTPICKER_CHANGED, function(event)#nl --implements  #handler#nl #skip #nl end )</template>
	</templates>

	<templates class="wxFilePickerCtrl">
		<template name="construction">
			#utbl$name = #class( #utbl#wxparent $name, $id, $value, $message, $wildcard, $pos, $size, $style #ifnotnull $window_style @{ +$window_style @} #ifnotnull $window_name @{, wx.DefaultValidator, $window_name @} )
		</template>
		<template name="evt_connect_OnFileChanged">#utbl$name:Connect( wx.wxEVT_COMMAND_FILEPICKER_CHANGED, function(event)#nl --implements  #handler#nl #skip #nl end )</template>
	</templates>

	<templates class="wxDirPickerCtrl">
		<template name="construction">
			#utbl$name = #class( #utbl#wxparent $name, $id, $value, $message, $pos, $size, $style #ifnotnull $window_style @{ +$window_style @} #ifnotnull $window_name @{, wx.DefaultValidator, $window_name @} )
		</template>
		<template name="evt_connect_OnDirChanged">#utbl$name:Connect( wx.wxEVT_COMMAND_DIRPICKER_CHANGED, function(event)#nl --implements  #handler#nl #skip #nl end )</template>
	</templates>

	<templates class="wxDatePickerCtrl">
		<template name="construction">#utbl$name = #class( #utbl#wxparent $name, $id, wx.wxDefaultDateTime, $pos, $size, $style #ifnotnull $window_style @{ +$window_style @} #ifnotnull $window_name @{, wx.DefaultValidator, $window_name @} )</template>
		<template name="evt_connect_OnDateChanged">#utbl$name:Connect( wx.wxEVT_DATE_CHANGED, function(event)#nl --implements  #handler#nl #skip #nl end )</template>
	</templates>

	<templates class="wxTimePickerCtrl">
		<template name="construction">#utbl$name = #class( #utbl#wxparent $name, $id, wx.wxDefaultDateTime, $pos, $size, $style #ifnotnull $window_style @{ +$window_style @} #ifnotnull $window_name @{, wx.DefaultValidator, $window_name @} )</template>
		<template name="evt_connect_OnTimeChanged">#utbl$name:Connect( wx.wxEVT_TIME_CHANGED, function(event)#nl --implements  #handler#nl #skip #nl end )</template>
	</templates>

	<templates class="wxCalendarCtrl">
		<template name="construction">#utbl$name = #class( #utbl#wxparent $name, $id, wx.wxDefaultDateTime, $pos, $size, $style #ifnotnull $window_style @{ +$window_style @} #ifnotnull $window_name @{, $window_name @} )</template>
		<template name="include"/><!--import wx.calendar</template>-->
		<template name="evt_connect_OnCalendar">#utbl$name:Connect( wx.wxEVT_CALENDAR_DOUBLECLICKED, function(event)#nl --implements  #handler#nl #skip #nl end )</template>
		<template name="evt_connect_OnCalendarSelChanged">#utbl$name:Connect( wx.wxEVT_CALENDAR_SEL_CHANGED, function(event)#nl --implements  #handler#nl #skip #nl end )</template>
		<template name="evt_connect_OnCalendarPageChanged">#utbl$name:Connect( wx.wxEVT_CALENDAR_PAGE_CHANGED, function(event)#nl --implements  #handler#nl #skip #nl end )</template>
		<template name="evt_connect_OnCalendarDay">#utbl$name:Connect( wx.wxEVT_CALENDAR_DAY_CHANGED, function(event)#nl --implements  #handler#nl #skip #nl end )</template>
		<template name="evt_connect_OnCalendarMonth">#utbl$name:Connect( wx.wxEVT_CALENDAR_MONTH_CHANGED, function(event)#nl --implements  #handler#nl #skip #nl end )</template>
		<template name="evt_connect_OnCalendarYear">#utbl$name:Connect( wx.wxEVT_CALENDAR_YEAR_CHANGED, function(event)#nl --implements  #handler#nl #skip #nl end )</template>
		<template name="evt_connect_OnCalendarWeekDayClicked">#utbl$name:Connect( wx.wxEVT_CALENDAR_WEEKDAY_CLICKED, function(event)#nl --implements  #handler#nl #skip #nl end )</template>
		<template name="evt_connect_OnCalendarWeekClicked">#utbl$name:Connect( wx.wxEVT_CALENDAR_WEEK_CLICKED, function(event)#nl --implements  #handler#nl #skip #nl end )</template>
	</templates>

	<templates class="wxScrollBar">
		<template name="construction">#utbl$name = #class( #utbl#wxparent $name, $id, $pos, $size, $style #ifnotnull $window_style @{ +$window_style @} #ifnotnull $window_name @{, wx.DefaultValidator, $window_name @} )</template>
		<template name="evt_entry_OnScroll">#utbl$name:Connect( wx.wxEVT_SCROLL( function(event)#nl --implements  #handler#nl #skip #nl end )</template>
		<template name="evt_connect_OnScroll">#utbl$name:Connect( wx.wxEVT_SCROLL_CHANGED, function(event)#nl --implements  #handler#nl #skip #nl end )</template>
		<template name="evt_connect_OnScrollTop">#utbl$name:Connect( wx.wxEVT_SCROLL_TOP, function(event)#nl --implements  #handler#nl #skip #nl end )</template>
		<template name="evt_connect_OnScrollBottom">#utbl$name:Connect( wx.wxEVT_SCROLL_BOTTOM, function(event)#nl --implements  #handler#nl #skip #nl end )</template>
		<template name="evt_connect_OnScrollLineUp">#utbl$name:Connect( wx.wxEVT_SCROLL_LINEUP, function(event)#nl --implements  #handler#nl #skip #nl end )</template>
		<template name="evt_connect_OnScrollLineDown">#utbl$name:Connect( wx.wxEVT_SCROLL_LINEDOWN, function(event)#nl --implements  #handler#nl #skip #nl end )</template>
		<template name="evt_connect_OnScrollPageUp">#utbl$name:Connect( wx.wxEVT_SCROLL_PAGEUP, function(event)#nl --implements  #handler#nl #skip #nl end )</template>
		<template name="evt_connect_OnScrollPageDown">#utbl$name:Connect( wx.wxEVT_SCROLL_PAGEDOWN, function(event)#nl --implements  #handler#nl #skip #nl end )</template>
		<template name="evt_connect_OnScrollThumbTrack">#utbl$name:Connect( wx.wxEVT_SCROLL_THUMBTRACK, function(event)#nl --implements  #handler#nl #skip #nl end )</template>
		<template name="evt_connect_OnScrollThumbRelease">#utbl$name:Connect( wx.wxEVT_SCROLL_THUMBRELEASE, function(event)#nl --implements  #handler#nl #skip #nl end )</template>
		<template name="evt_connect_OnScrollChanged">#utbl$name:Connect( wx.wxEVT_SCROLL_CHANGED, function(event)#nl --implements  #handler#nl #skip #nl end )</template>

		<template name="evt_connect_OnCommandScroll">-- event #utbl$name:OnCommandScroll isn't currently supported by wxLua</template>
		<template name="evt_connect_OnCommandScrollTop">-- event #utbl$name:OnCommandScrollTop isn't currently supported by wxLua</template>
		<template name="evt_connect_OnCommandScrollBottom">-- event #utbl$name:OnCommandScrollBottom isn't currently supported by wxLua</template>
		<template name="evt_connect_OnCommandScrollLineUp">-- event #utbl$name:OnCommandScrollLineUp isn't currently supported by wxLua</template>
		<template name="evt_connect_OnCommandScrollLineDown">-- event #utbl$name:OnCommandScrollLineDown isn't currently supported by wxLua</template>
		<template name="evt_connect_OnCommandScrollPageUp">-- event #utbl$name:OnCommandScrollPageUp isn't currently supported by wxLua</template>
		<template name="evt_connect_OnCommandScrollPageDown">-- event #utbl$name:OnCommandScrollPageDown isn't currently supported by wxLua</template>
		<template name="evt_connect_OnCommandScrollThumbTrack">-- event #utbl$name:OnCommandScrollThumbTrack isn't currently supported by wxLua</template>
		<template name="evt_connect_OnCommandScrollThumbRelease">-- event #utbl$name:OnCommandScrollThumbRelease isn't currently supported by wxLua</template>
		<template name="evt_connect_OnCommandScrollChanged">-- event #utbl$name:OnCommandScrollChanged isn't currently supported by wxLua</template>
	</templates>

	<templates class="wxSpinCtrl">
		<template name="construction">#utbl$name = #class( #utbl#wxparent $name, $id, $value, $pos, $size, $style #ifnotnull $window_style @{ +$window_style @}, $min, $max, $initial #ifnotnull $window_name @{, $window_name @} )</template>
		<template name="evt_connect_OnSpinCtrl">#utbl$name:Connect( wx.wxEVT_COMMAND_SPINCTRL_UPDATED, function(event)#nl --implements  #handler#nl #skip #nl end )</template>
		<template name="evt_connect_OnSpinCtrlText">#utbl$name:Connect( wx.wxEVT_COMMAND_TEXT_UPDATED, function(event)#nl --implements  #handler#nl #skip #nl end )</template>
		<template name="evt_connect_OnTextEnter">#utbl$name:Connect( wx.wxEVT_COMMAND_TEXT_ENTER, function(event)#nl --implements  #handler#nl #skip #nl end )</template>
	</templates>

	<templates class="wxSpinCtrlDouble">
		<template name="construction">#utbl$name = #class( #utbl#wxparent $name, $id, $value, $pos, $size, $style #ifnotnull $window_style @{ +$window_style @}, $min, $max, $initial, $inc #ifnotnull $window_name @{, $window_name @} )</template>
		<template name="settings">#utbl$name:SetDigits( $digits )</template>
		<template name="evt_connect_OnSpinCtrlDouble">#utbl$name:Connect( wx.wxEVT_COMMAND_SPINCTRLDOUBLE_UPDATED, function(event)#nl --implements  #handler#nl #skip #nl end )</template>
		<template name="evt_connect_OnSpinCtrlText">#utbl$name:Connect( wx.wxEVT_COMMAND_TEXT_UPDATED, function(event)#nl --implements  #handler#nl #skip #nl end )</template>
		<template name="evt_connect_OnTextEnter">#utbl$name:Connect( wx.wxEVT_COMMAND_TEXT_ENTER, function(event)#nl --implements  #handler#nl #skip #nl end )</template>
	</templates>

	<templates class="wxSpinButton">
		<template name="construction">#utbl$name = #class( #utbl#wxparent $name, $id, $pos, $size, $style #ifnotnull $window_style @{ +$window_style @} #ifnotnull $window_name @{, $window_name @} )</template>
		<template name="evt_connect_OnSpin">#utbl$name:Connect( wx.wxEVT_SCROLL_THUMBTRACK, function(event)#nl --implements  #handler#nl #skip #nl end )</template>
		<template name="evt_connect_OnSpinUp">#utbl$name:Connect( wx.wxEVT_SCROLL_LINEUP, function(event)#nl --implements  #handler#nl #skip #nl end )</template>
		<template name="evt_connect_OnSpinDown">#utbl$name:Connect( wx.wxEVT_SCROLL_LINEDOWN, function(event)#nl --implements  #handler#nl #skip #nl end )</template>
	</templates>

	<templates class="wxHyperlinkCtrl">
		<template name="construction">#utbl$name = #class( #utbl#wxparent $name, $id, $label, $url, $pos, $size, $style #ifnotnull $window_style @{ +$window_style @} #ifnotnull $window_name @{, $window_name @} )</template>
		<template name="settings">
			#ifnotnull $hover_color
			@{ #nl #utbl$name:SetHoverColour( $hover_color ) @}

			#ifnotnull $normal_color
			@{ #nl #utbl$name:SetNormalColour( $normal_color ) @}

			#ifnotnull $visited_color
			@{ #nl #utbl$name:SetVisitedColour( $visited_color ) @}
		</template>
		<template name="evt_connect_OnHyperlink">#utbl$name:Connect( wx.wxEVT_COMMAND_HYPERLINK, function(event)#nl --implements  #handler#nl #skip #nl end )</template>
	</templates>

	<templates class="wxGenericDirCtrl">
		<template name="construction">#utbl$name = #class( #utbl#wxparent $name, $id, $defaultfolder, $pos, $size, $style #ifnotnull $window_style @{ +$window_style@}, $filter, $defaultfilter #ifnotnull $window_name @{, $window_name @} )</template>
		<template name="settings">
			#nl #utbl$name:ShowHidden( $show_hidden )
		</template>
		<template name="evt_connect_OnDirctrlSelectionChanged">#utbl$name:Connect( wx.wxEVT_DIRCTRL_SELECTIONCHANGED, function(event)#nl --implements  #handler#nl #skip #nl end )</template>
		<template name="evt_connect_OnDirctrlFileActivated">#utbl$name:Connect( wx.wxEVT_DIRCTRL_FILEACTIVATED, function(event)#nl --implements  #handler#nl #skip #nl end )</template>
	</templates>

	<templates class="wxSearchCtrl">
		<template name="construction">#utbl$name = #class( #utbl#wxparent $name, $id, $value, $pos, $size, $style #ifnotnull $window_style @{ +$window_style @} #ifnotnull $window_name @{, wx.DefaultValidator, $window_name @} )</template>
		<template name="settings">
			#utbl$name:ShowSearchButton( $search_button )
			#nl #utbl$name:ShowCancelButton( $cancel_button )
		</template>
		<template name="evt_connect_OnText">-- event #utbl$name:OnText isn't currently supported by wxLua</template>
		<template name="evt_connect_OnTextEnter">-- event #utbl$name:OnTextEnter isn't currently supported by wxLua</template>
		<template name="evt_connect_OnSearchButton">-- event #utbl$name:OnSearchButton isn't currently supported by wxLua</template>
		<template name="evt_connect_OnCancelButton">-- event #utbl$name:OnCancelButton isn't currently supported by wxLua</template>
	</templates>

	<templates class="CustomControl">
		<template name="construction">$construction</template>
		<template name="settings">$settings</template>
		<template name="include">$include</template>
	</templates>

	<templates class="CustomCode">
		<template name="include">$require_lua</template>
		<template name="construction">$code_lua</template>
	</templates>

	<templates class="wxMediaCtrl">
		<template name="construction">
			#utbl$name = wx.wxMediaCtrl( #utbl#wxparent $name, $id, "", $pos, $size)
			#ifnotnull $file
			@{ #nl #utbl$name:Load( $file ) @}
			#ifnotnull $playback_rate
			@{#nl@}
			#ifnotnull $volume
			@{#nl #utbl$name:SetVolume($volume)@}
			#ifnotnull $player_controls
			@{#nl #utbl$name:ShowPlayerControls(wxMEDIACTRLPLAYERCONTROLS_$player_controls)@}
		</template>
		<template name="settings">
			#ifequal $play "1"
			@{#nl #utbl$name:Play()@}
		</template>
		<template name="include"/><!--import wx.media</template>-->
	</templates>

	<templates class="wxTimer">
		<template name="construction">
			#utbl$name = wx.wxTimer(#utbl#wxparent $name, $id) #nl
		</template>
		<template name="settings">
			#ifequal $enabled "1"
			@{ #utbl$name:Start( $period #ifequal $oneshot "1" @{, true@} ) #nl @}
		</template>
		<template name="evt_connect_OnTimer">#utbl$name:Connect( wx.wxEVT_TIMER, function(event)#nl --implements  #handler#nl #skip #nl end )</template>
	</templates>

	<templates class="wxStyledTextCtrl">
		<template name="construction">
			@# WARNING: wxLua code generation isn't supported for this widget yet. #nl
			#utbl$name = wx.wxWindow( #utbl#wxparent $name )
		</template>
	</templates>

</codegen>
